                         .module miditest.c
                         .area vector(abs)
                         .org 20
 0014 9EC0              rjmp _iTxd
                         .org 18
 0012 4FC0              rjmp _iRxd
                         .area text
 0000                   .dbfile C:\projects\SynthMod\100-1001\firmware\miditest.c
 0000                   .dbfunc s InitUart _InitUart fI
                       ;              i -> R20,R21
                       ;           baud -> R16,R17
                         .even
 0000                 _InitUart::
 0000 00D0              rcall push_gset1
 0002                   .dbline 29{
                       ; /*******************************************************************************
                       ;     Midi.c
                       ; 
                       ;     These are the functions that provide the interface to the midi port
                       ; 
                       ; *******************************************************************************/
                       ; 
                       ; #include <io8515.h>
                       ; #include <macros.h>
                       ; #include "smb.h"
                       ; #include "midi.h"
                       ; 
                       ; #pragma interrupt_handler iTxd:11 
                       ; #pragma interrupt_handler iRxd:10
                       ; 
                       ; typedef struct {
                       ;     volatile int head;
                       ;     volatile int tail;
                       ;     volatile int nchar;
                       ;     volatile int size;
                       ; }IODESC;
                       ; 
                       ; volatile IODESC txdesc;
                       ; char txbuff[32];
                       ; volatile IODESC rxdesc;
                       ; char rxbuff[32];
                       ; 
                       ; void InitUart(int baud)
                       ; {
 0002                   .dbline 32
                       ;     int i;
                       ; 
                       ;     UCR |= 0x18;    /*  enable uart rec and xmit    */
 0002 8AB1              in R24,0xa
 0004 8861              ori R24,24
 0006 8AB9              out 0xa,R24
 0008                   .dbline 33
                       ;     UBRR = baud;
 0008 09B9              out 0x9,R16
 000A                   .dbline 34
                       ;     txdesc.head = 0;    /*  initialize transmit descriptor  */
 000A 2224              clr R2
 000C 3324              clr R3
 000E 30924B00          sts _txdesc+1,R3
 0012 20924A00          sts _txdesc,R2
 0016                   .dbline 35
                       ;     txdesc.tail = 0;
 0016 30924D00          sts _txdesc+2+1,R3
 001A 20924C00          sts _txdesc+2,R2
 001E                   .dbline 36
                       ;     txdesc.nchar = 0;
 001E 30924F00          sts _txdesc+4+1,R3
 0022 20924E00          sts _txdesc+4,R2
 0026                   .dbline 37
                       ;     txdesc.size = 32;
 0026 80E2              ldi R24,32
 0028 90E0              ldi R25,0
 002A 90935100          sts _txdesc+6+1,R25
 002E 80935000          sts _txdesc+6,R24
 0032                   .dbline 38
                       ;     rxdesc.head = 0;    /*  initialize receiever descriptor */
 0032 30922300          sts _rxdesc+1,R3
 0036 20922200          sts _rxdesc,R2
 003A                   .dbline 39
                       ;     rxdesc.tail = 0;
 003A 30922500          sts _rxdesc+2+1,R3
 003E 20922400          sts _rxdesc+2,R2
 0042                   .dbline 40
                       ;     rxdesc.size = 32;
 0042 90932900          sts _rxdesc+6+1,R25
 0046 80932800          sts _rxdesc+6,R24
 004A                   .dbline 41
                       ;     rxdesc.nchar = 0;
 004A 30922700          sts _rxdesc+4+1,R3
 004E 20922600          sts _rxdesc+4,R2
 0052                   .dbline 42
                       ;     for(i=0;i<32;++i)
 0052 4427              clr R20
 0054 5527              clr R21
 0056                 L9:
 0056                   .dbline 43
 0056                   .dbline 44
 0056 80E0              ldi R24,<_txbuff
 0058 90E0              ldi R25,>_txbuff
 005A E42F              mov R30,R20
 005C F52F              mov R31,R21
 005E E80F              add R30,R24
 0060 F91F              adc R31,R25
 0062 8FE6              ldi R24,111
 0064 8083              std z+0,R24
 0066                   .dbline 45
 0066 80E0              ldi R24,<_rxbuff
 0068 90E0              ldi R25,>_rxbuff
 006A E42F              mov R30,R20
 006C F52F              mov R31,R21
 006E E80F              add R30,R24
 0070 F91F              adc R31,R25
 0072 89E6              ldi R24,105
 0074 8083              std z+0,R24
 0076                   .dbline 46
 0076                 L10:
 0076                   .dbline 42
 0076 4F5F              subi R20,255  ; offset = 1
 0078 5F4F              sbci R21,255
 007A                   .dbline 42
 007A 4032              cpi R20,32
 007C 80E0              ldi R24,0
 007E 5807              cpc R21,R24
 0080 54F3              brlt L9
 0082                   .dbline 47}
                       ;     {
                       ;         txbuff[i] = 'o';
                       ;         rxbuff[i] = 'i';
                       ;     }
                       ; }
 0082                 L2:
 0082 00D0              rcall pop_gset1
 0084 0895              ret
 0086                   .dbsym r i 20 I
 0086                   .dbsym r baud 16 I
 0086                   .dbfunc s Disable _Disable fI
                         .even
 0086                 _Disable::
 0086                   .dbline 50{
                       ; 
                       ; void Disable(void)      /*  disable interrupts  */
                       ; {
 0086                   .dbline 51
                       ;     SREG &= ~0x80;
 0086 F894              bclr 7
 0088                   .dbline 52}
                       ; }
 0088                 L13:
 0088 0895              ret
 008A                   .dbfunc s Enable _Enable fI
                         .even
 008A                 _Enable::
 008A                   .dbline 55{
                       ; 
                       ; void Enable(void)       /* enable interrupts    */
                       ; {
 008A                   .dbline 56
                       ;     SREG |= 0x80;       
 008A 7894              bset 7
 008C                   .dbline 57}
                       ; }
 008C                 L14:
 008C 0895              ret
 008E                   .dbfunc s EnableRxIRQ _EnableRxIRQ fI
                         .even
 008E                 _EnableRxIRQ::
 008E                   .dbline 60{
                       ; 
                       ; void EnableRxIRQ(void)  
                       ; {
 008E                   .dbline 64
                       ;     /**************************
                       ;     ** Enable Receiver interrupts
                       ;     **************************/
                       ;     UCR |= 0x80;
 008E 579A              sbi 0xa,7
 0090                   .dbline 65}
                       ; }
 0090                 L15:
 0090 0895              ret
 0092                   .dbfunc s DisableRxIRQ _DisableRxIRQ fI
                         .even
 0092                 _DisableRxIRQ::
 0092                   .dbline 68{
                       ; 
                       ; void DisableRxIRQ(void)
                       ; {
 0092                   .dbline 72
                       ;     /**************************
                       ;     ** Disable Receirver interrupts
                       ;     **************************/
                       ;     UCR &= ~0x80;
 0092 5798              cbi 0xa,7
 0094                   .dbline 73}
                       ; }
 0094                 L16:
 0094 0895              ret
 0096                   .dbfunc s EnableTxIRQ _EnableTxIRQ fI
                         .even
 0096                 _EnableTxIRQ::
 0096                   .dbline 76{
                       ; 
                       ; void EnableTxIRQ(void)
                       ; {
 0096                   .dbline 77
                       ;     UCR |= 0x20;    /*  enable transmit data register empty interrupt   */
 0096 559A              sbi 0xa,5
 0098                   .dbline 78}
                       ; }
 0098                 L17:
 0098 0895              ret
 009A                   .dbfunc s DisableTxIRQ _DisableTxIRQ fI
                         .even
 009A                 _DisableTxIRQ::
 009A                   .dbline 81{
                       ; 
                       ; void DisableTxIRQ(void)
                       ; {
 009A                   .dbline 82
                       ;     UCR &= ~0x20;   /*  disable transmit data register empty interrupt  */
 009A 5598              cbi 0xa,5
 009C                   .dbline 83}
                       ; }
 009C                 L18:
 009C 0895              ret
 009E                   .dbfunc s iRxd _iRxd fI
                       ;              c -> R16
                         .even
 009E                 _iRxd::
 009E 2A92              st -y,R2
 00A0 3A92              st -y,R3
 00A2 4A92              st -y,R4
 00A4 5A92              st -y,R5
 00A6 0A93              st -y,R16
 00A8 8A93              st -y,R24
 00AA 9A93              st -y,R25
 00AC EA93              st -y,R30
 00AE FA93              st -y,R31
 00B0 2FB6              in R2,0x3f
 00B2 2A92              st -y,R2
 00B4                   .dbline 86{
                       ; 
                       ; void iRxd(void)
                       ; {
 00B4                   .dbline 91
                       ;     /**************************
                       ;     ** Interrupt handler for 
                       ;     ** Receive Interrupts
                       ;     **************************/
                       ;     char c = UDR;   /*  read data from receive data reg */
 00B4 0CB1              in R16,0xc
 00B6                   .dbline 92
                       ;     if(rxdesc.nchar < rxdesc.size)  /*  is there space to put char? */
 00B6 30902900          lds R3,_rxdesc+6+1
 00BA 20902800          lds R2,_rxdesc+6
 00BE 50902700          lds R5,_rxdesc+4+1
 00C2 40902600          lds R4,_rxdesc+4
 00C6 4214              cp R4,R2
 00C8 5304              cpc R5,R3
 00CA 64F5              brge L20
 00CC                   .dbline 93
                       ;     {
 00CC                   .dbline 94
                       ;         rxbuff[rxdesc.head++] = c;  /*  put character into buffer   */
 00CC 30902300          lds R3,_rxdesc+1
 00D0 20902200          lds R2,_rxdesc
 00D4 822D              mov R24,R2
 00D6 932D              mov R25,R3
 00D8 0196              adiw R24,1
 00DA 90932300          sts _rxdesc+1,R25
 00DE 80932200          sts _rxdesc,R24
 00E2 80E0              ldi R24,<_rxbuff
 00E4 90E0              ldi R25,>_rxbuff
 00E6 E22D              mov R30,R2
 00E8 F32D              mov R31,R3
 00EA E80F              add R30,R24
 00EC F91F              adc R31,R25
 00EE 0083              std z+0,R16
 00F0                   .dbline 95
                       ;         if(rxdesc.head == rxdesc.size) rxdesc.head = 0; /*  wrap head pointer   */
 00F0 30902900          lds R3,_rxdesc+6+1
 00F4 20902800          lds R2,_rxdesc+6
 00F8 50902300          lds R5,_rxdesc+1
 00FC 40902200          lds R4,_rxdesc
 0100 4214              cp R4,R2
 0102 5304              cpc R5,R3
 0104 31F4              brne L24
 0106                   .dbline 95
 0106 2224              clr R2
 0108 3324              clr R3
 010A 30922300          sts _rxdesc+1,R3
 010E 20922200          sts _rxdesc,R2
 0112                 L24:
 0112                   .dbline 96
                       ;         rxdesc.nchar++; /*  increment character count   */
 0112 90912700          lds R25,_rxdesc+4+1
 0116 80912600          lds R24,_rxdesc+4
 011A 0196              adiw R24,1
 011C 90932700          sts _rxdesc+4+1,R25
 0120 80932600          sts _rxdesc+4,R24
 0124                   .dbline 97
                       ;     }   /*  otherwise, just drop character  */
 0124                 L20:
 0124                   .dbline 98}
                       ; }
 0124                 L19:
 0124 2990              ld R2,y+
 0126 2FBE              out 0x3f,R2
 0128 F991              ld R31,y+
 012A E991              ld R30,y+
 012C 9991              ld R25,y+
 012E 8991              ld R24,y+
 0130 0991              ld R16,y+
 0132 5990              ld R5,y+
 0134 4990              ld R4,y+
 0136 3990              ld R3,y+
 0138 2990              ld R2,y+
 013A 1895              reti
 013C                   .dbsym r c 16 c
 013C                   .dbfunc s iTxd _iTxd fI
                       ;              c -> R20
                         .even
 013C                 _iTxd::
 013C 00D0              rcall push_lset
 013E 00D0              rcall push_gset1
 0140                   .dbline 101{
                       ; 
                       ; void iTxd(void)     /* interrupt handler for uart   */
                       ; {
 0140                   .dbline 104
                       ;     char c;
                       ; 
                       ;     c = (char)txbuff[txdesc.tail++];        /*  get character from buffer   */
 0140 30904D00          lds R3,_txdesc+2+1
 0144 20904C00          lds R2,_txdesc+2
 0148 822D              mov R24,R2
 014A 932D              mov R25,R3
 014C 0196              adiw R24,1
 014E 90934D00          sts _txdesc+2+1,R25
 0152 80934C00          sts _txdesc+2,R24
 0156 80E0              ldi R24,<_txbuff
 0158 90E0              ldi R25,>_txbuff
 015A E22D              mov R30,R2
 015C F32D              mov R31,R3
 015E E80F              add R30,R24
 0160 F91F              adc R31,R25
 0162 4081              ldd R20,z+0
 0164                   .dbline 105
                       ;     --txdesc.nchar;                     /*  one less character to send  */
 0164 90914F00          lds R25,_txdesc+4+1
 0168 80914E00          lds R24,_txdesc+4
 016C 0197              sbiw R24,1
 016E 90934F00          sts _txdesc+4+1,R25
 0172 80934E00          sts _txdesc+4,R24
 0176                   .dbline 106
                       ;     if(txdesc.nchar == 0)               /*  is xmit buffer empty?   */              
 0176 30904F00          lds R3,_txdesc+4+1
 017A 20904E00          lds R2,_txdesc+4
 017E 2220              tst R2
 0180 19F4              brne L31
 0182 3320              tst R3
 0184 09F4              brne L31
 0186                   .dbline 107
                       ;         DisableTxIRQ();                 /*  stop transmitting data  */
 0186 89DF              rcall _DisableTxIRQ
 0188                 L31:
 0188                   .dbline 108
                       ;     if(txdesc.tail == txdesc.size) txdesc.tail = 0; /* wrap tail pointer    */
 0188 30905100          lds R3,_txdesc+6+1
 018C 20905000          lds R2,_txdesc+6
 0190 50904D00          lds R5,_txdesc+2+1
 0194 40904C00          lds R4,_txdesc+2
 0198 4214              cp R4,R2
 019A 5304              cpc R5,R3
 019C 31F4              brne L34
 019E                   .dbline 108
 019E 2224              clr R2
 01A0 3324              clr R3
 01A2 30924D00          sts _txdesc+2+1,R3
 01A6 20924C00          sts _txdesc+2,R2
 01AA                 L34:
 01AA                   .dbline 109
                       ;     UDR = c;
 01AA 4CB9              out 0xc,R20
 01AC                   .dbline 110}
                       ; }
 01AC                 L28:
 01AC 00D0              rcall pop_gset1
 01AE 00D0              rcall pop_lset
 01B0 1895              reti
 01B2                   .dbsym r c 20 c
 01B2                   .dbfunc s GetC _GetC fI
                       ;              c -> R20,R21
                         .even
 01B2                 _GetC::
 01B2 00D0              rcall push_gset1
 01B4                   .dbline 113{
                       ; 
                       ; int GetC(void)
                       ; {
 01B4                 L40:
 01B4                   .dbline 120
 01B4                 L41:
 01B4                   .dbline 120
                       ;     /*********************************
                       ;     ** Get a character from the UART
                       ;     ** If there is no character, wait
                       ;     *********************************/
                       ;     int c;
                       ; 
                       ;     while(rxdesc.nchar == 0);   /*  wait for character to apear in buffer   */
 01B4 30902700          lds R3,_rxdesc+4+1
 01B8 20902600          lds R2,_rxdesc+4
 01BC 2220              tst R2
 01BE 11F4              brne X0
 01C0 3320              tst R3
 01C2 C1F3              breq L40
 01C4                 X0:
 01C4                   .dbline 121
                       ;     Disable();          /*  disable interrupts  */
 01C4 60DF              rcall _Disable
 01C6                   .dbline 122
                       ;     c = (int)rxbuff[rxdesc.tail++];     /*  get character from buffer   */
 01C6 30902500          lds R3,_rxdesc+2+1
 01CA 20902400          lds R2,_rxdesc+2
 01CE 822D              mov R24,R2
 01D0 932D              mov R25,R3
 01D2 0196              adiw R24,1
 01D4 90932500          sts _rxdesc+2+1,R25
 01D8 80932400          sts _rxdesc+2,R24
 01DC 80E0              ldi R24,<_rxbuff
 01DE 90E0              ldi R25,>_rxbuff
 01E0 E22D              mov R30,R2
 01E2 F32D              mov R31,R3
 01E4 E80F              add R30,R24
 01E6 F91F              adc R31,R25
 01E8 4081              ldd R20,z+0
 01EA 5527              clr R21
 01EC                   .dbline 123
                       ;     if(rxdesc.tail == rxdesc.size) rxdesc.tail = 0; /*  wrap tail pointer   */
 01EC 30902900          lds R3,_rxdesc+6+1
 01F0 20902800          lds R2,_rxdesc+6
 01F4 50902500          lds R5,_rxdesc+2+1
 01F8 40902400          lds R4,_rxdesc+2
 01FC 4214              cp R4,R2
 01FE 5304              cpc R5,R3
 0200 31F4              brne L45
 0202                   .dbline 123
 0202 2224              clr R2
 0204 3324              clr R3
 0206 30922500          sts _rxdesc+2+1,R3
 020A 20922400          sts _rxdesc+2,R2
 020E                 L45:
 020E                   .dbline 124
                       ;     rxdesc.nchar--; /*  decrement number of chars in buffer */
 020E 90912700          lds R25,_rxdesc+4+1
 0212 80912600          lds R24,_rxdesc+4
 0216 0197              sbiw R24,1
 0218 90932700          sts _rxdesc+4+1,R25
 021C 80932600          sts _rxdesc+4,R24
 0220                   .dbline 125
                       ;     Enable();
 0220 34DF              rcall _Enable
 0222                   .dbline 126
                       ;     return c;   /*  return fetched character    */  
 0222 042F              mov R16,R20
 0224 152F              mov R17,R21
 0226                 L39:
 0226 00D0              rcall pop_gset1
 0228 0895              ret
 022A                   .dbline 127}
 022A                   .dbsym r c 20 I
 022A                   .dbfunc s PutC _PutC fI
                       ;              i -> R20,R21
                         .even
 022A                 _PutC::
 022A 00D0              rcall push_gset1
 022C 402F              mov R20,R16
 022E 512F              mov R21,R17
 0230                   .dbline 130{
                       ; }
                       ; 
                       ; void PutC(int i)
                       ; {
 0230                 L52:
 0230                   .dbline 131
 0230                 L53:
 0230                   .dbline 131
                       ;     while(txdesc.nchar == txdesc.size); /*  pend on buffer full */
 0230 30905100          lds R3,_txdesc+6+1
 0234 20905000          lds R2,_txdesc+6
 0238 50904F00          lds R5,_txdesc+4+1
 023C 40904E00          lds R4,_txdesc+4
 0240 4214              cp R4,R2
 0242 5304              cpc R5,R3
 0244 A9F3              breq L52
 0246                   .dbline 132
                       ;     Disable();  /*  Disable interrupts  */
 0246 1FDF              rcall _Disable
 0248                   .dbline 133
                       ;     txbuff[txdesc.head++] = (char)i;    /*  put data into buffer    */
 0248 30904B00          lds R3,_txdesc+1
 024C 20904A00          lds R2,_txdesc
 0250 822D              mov R24,R2
 0252 932D              mov R25,R3
 0254 0196              adiw R24,1
 0256 90934B00          sts _txdesc+1,R25
 025A 80934A00          sts _txdesc,R24
 025E 80E0              ldi R24,<_txbuff
 0260 90E0              ldi R25,>_txbuff
 0262 E22D              mov R30,R2
 0264 F32D              mov R31,R3
 0266 E80F              add R30,R24
 0268 F91F              adc R31,R25
 026A 4083              std z+0,R20
 026C                   .dbline 134
                       ;     if(txdesc.head == txdesc.size) txdesc.head = 0; /*  wrap head pointer   */
 026C 30905100          lds R3,_txdesc+6+1
 0270 20905000          lds R2,_txdesc+6
 0274 50904B00          lds R5,_txdesc+1
 0278 40904A00          lds R4,_txdesc
 027C 4214              cp R4,R2
 027E 5304              cpc R5,R3
 0280 31F4              brne L57
 0282                   .dbline 134
 0282 2224              clr R2
 0284 3324              clr R3
 0286 30924B00          sts _txdesc+1,R3
 028A 20924A00          sts _txdesc,R2
 028E                 L57:
 028E                   .dbline 135
                       ;     if(txdesc.nchar == 0)   /*  first char in buff? */
 028E 30904F00          lds R3,_txdesc+4+1
 0292 20904E00          lds R2,_txdesc+4
 0296 2220              tst R2
 0298 19F4              brne L60
 029A 3320              tst R3
 029C 09F4              brne L60
 029E                   .dbline 136
                       ;         EnableTxIRQ();      /*  start transmit interrupt    */
 029E FBDE              rcall _EnableTxIRQ
 02A0                 L60:
 02A0                   .dbline 137
                       ;     txdesc.nchar++;
 02A0 90914F00          lds R25,_txdesc+4+1
 02A4 80914E00          lds R24,_txdesc+4
 02A8 0196              adiw R24,1
 02AA 90934F00          sts _txdesc+4+1,R25
 02AE 80934E00          sts _txdesc+4,R24
 02B2                   .dbline 138
                       ;     Enable();   /*  enable interrupts   */  
 02B2 EBDE              rcall _Enable
 02B4                   .dbline 139}
                       ; }
 02B4                 L51:
 02B4 00D0              rcall pop_gset1
 02B6 0895              ret
 02B8                   .dbsym r i 20 I
 02B8                   .dbfunc s Delay _Delay fI
                       ;              a -> R18
                       ;              b -> R16
                         .even
 02B8                 _Delay::
 02B8                   .dbline 142{
                       ; 
                       ; void Delay()
                       ; {
 02B8                   .dbline 145
                       ;     unsigned char a, b;
                       ; 
                       ;     for (a = 1; a; a++)
 02B8 21E0              ldi R18,1
 02BA 06C0              rjmp L68
 02BC                 L65:
 02BC                   .dbline 146
 02BC 01E0              ldi R16,1
 02BE 01C0              rjmp L72
 02C0                 L69:
 02C0                   .dbline 146
 02C0                 L70:
 02C0                   .dbline 146
 02C0 0F5F              subi R16,255    ; addi 1
 02C2                 L72:
 02C2                   .dbline 146
 02C2 0023              tst R16
 02C4 E9F7              brne L69
 02C6                 L66:
 02C6                   .dbline 145
 02C6 2F5F              subi R18,255    ; addi 1
 02C8                 L68:
 02C8                   .dbline 145
 02C8 2223              tst R18
 02CA C1F7              brne L65
 02CC                   .dbline 147}
                       ;         for (b = 1; b; b++);
                       ; }
 02CC                 L64:
 02CC 0895              ret
 02CE                   .dbsym r a 18 c
 02CE                   .dbsym r b 16 c
                         .area lit
 0000                 _cr:
 0000 56657273696F6E20312E303100    .byte 'V,'e,'r,'s,'i,'o,'n,32,49,46,48,49,0
 000D                   .dbsym s cr _cr Ac[13:13]
                         .area text
 02CE                   .dbfile C:\projects\SynthMod\100-1001\firmware\miditest.c
 02CE                   .dbfunc s main _main fI
                       ;          state -> R12
                       ;           note -> R10
                       ;            cmd -> R20,R21
                       ;              c -> R22
                         .even
 02CE                 _main::
 02CE                   .dbline 182{
                       ; 
                       ; enum {IDLE,NOTE0,NOTE1};
                       ; 
                       ; #define SYSEX           0xf0
                       ; #define SYSCOMUNDEF     0xf1
                       ; #define SYSCOMSONGPOS   0xf2
                       ; #define SYSCOMSONGSEL   0xf3
                       ; #define SYSCOMUNDEF1    0xf4
                       ; #define SYSCOMUNDEF2    0xf5
                       ; #define SYSCOMTUNEREQ   0xf6
                       ; #define SYSEXEND        0xf7
                       ; #define SYSRTCLOCK      0xf8
                       ; #define SYSRTUNDEF      0xf9
                       ; #define SYSRTSTART      0xfa
                       ; #define SYSRTCONTINUE   0xfb
                       ; #define SYSRTSTOP       0xfc
                       ; #define SYSRTUNDEF1     0xfd
                       ; #define SYSRTACTIVESEN  0xfe
                       ; #define SYSRTRESET      0xff
                       ; 
                       ; #define NOTEON  0x90
                       ; #define NOTEOFF 0x80
                       ; 
                       ; char GateShadow;
                       ; char LedShadow;
                       ; 
                       ; #define MIDI_CLOCK  0x80
                       ; #define MIDI_START  0x40
                       ; #define MIDI_RESET  0x20
                       ; #define MIDI_GATE   0x01
                       ; 
                       ; static const char cr[] = "Version 1.01";
                       ; 
                       ; main()
                       ; {
 02CE                   .dbline 184
                       ;     char note;
                       ;     char c=0;
 02CE 6627              clr R22
 02D0                   .dbline 188
                       ;     int cmd;
                       ;     char state;
                       ; 
                       ;     MCUCR |= 0x80;  /*  enable external memory  */
 02D0 85B7              in R24,0x35
 02D2 8068              ori R24,128
 02D4 85BF              out 0x35,R24
 02D6                   .dbline 190
                       ; 
                       ;     InitUart(BAUD_MIDI);
 02D6 0FE0              ldi R16,15
 02D8 10E0              ldi R17,0
 02DA 92DE              rcall _InitUart
 02DC                   .dbline 193
                       ; /*  EnableRxIRQ();  */  /*  enable receive interrupt    */
                       ; /*  Enable();   */      /*  enable global interrupts    */
                       ;     GATE_PORT = 0x00;   /*  set all outputs to zero */
 02DC 2224              clr R2
 02DE 209200C0          sts 49152,R2
 02E2                   .dbline 194
                       ;     LED_PORT = 0xff;
 02E2 8FEF              ldi R24,255
 02E4 809300C4          sts 50176,R24
 02E8                   .dbline 195
                       ;     DDRB = 0x01;    //PB0 is out
 02E8 81E0              ldi R24,1
 02EA 87BB              out 0x17,R24
 02EC                   .dbline 196
                       ;     cmd = 0;
 02EC 4427              clr R20
 02EE 5527              clr R21
 02F0 0BC0              rjmp L76
 02F2                 L75:
 02F2                   .dbline 198
 02F2                   .dbline 200
 02F2 262E              mov R2,R22
 02F4 2094              com R2
 02F6 209200C4          sts 50176,R2
 02FA                   .dbline 201
 02FA 6F5F              subi R22,255    ; addi 1
 02FC                   .dbline 202
 02FC 81E0              ldi R24,1
 02FE 90E0              ldi R25,0
 0300 4827              eor R20,R24
 0302 5927              eor R21,R25
 0304                   .dbline 203
 0304 48BB              out 0x18,R20
 0306                   .dbline 204
 0306 D8DF              rcall _Delay
 0308                   .dbline 206
 0308                 L76:
 0308                   .dbline 197
                       ;     while(1)
 0308 F4CF              rjmp L75
 030A                 X1:
 030A                   .dbline 207
                       ;     {
                       ; //      if(USR & 0x80) c = UDR;
                       ;         LED_PORT = ~c;
                       ;         ++c;
                       ;         cmd ^= 0x01;    //toggle bit
                       ;         PORTB = cmd;
                       ;         Delay();
                       ;     
                       ;     }   /*end of while(1) loop  */
                       ;     return 0;
 030A 0027              clr R16
 030C 1127              clr R17
 030E                 L74:
 030E 0895              ret
 0310                   .dbline 208}
 0310                   .dbsym r state 12 c
 0310                   .dbsym r note 10 c
 0310                   .dbsym r cmd 20 I
 0310                   .dbsym r c 22 c
                         .area bss
 0000                   .dbfile C:\projects\SynthMod\100-1001\firmware\miditest.c
 0000                 _LedShadow::
 0000                   .blkb 1
 0001                   .dbsym s LedShadow _LedShadow c
 0001                 _GateShadow::
 0001                   .blkb 1
 0002                   .dbsym s GateShadow _GateShadow c
 0002                 _rxbuff::
 0002                   .blkb 32
 0022                   .dbsym s rxbuff _rxbuff Ac[32:32]
 0022                 _rxdesc::
 0022                   .blkb 8
 002A                   .dbsym s rxdesc _rxdesc X
 002A                 _txbuff::
 002A                   .blkb 32
 004A                   .dbsym s txbuff _txbuff Ac[32:32]
 004A                 _txdesc::
 004A                   .blkb 8
 0052                   .dbsym s txdesc _txdesc X
